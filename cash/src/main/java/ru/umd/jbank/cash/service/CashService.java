package ru.umd.jbank.cash.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import ru.umd.jbank.cash.integration.client.account.AccountClient;
import ru.umd.jbank.cash.integration.client.notification.NotificationClient;
import ru.umd.jbank.cash.service.dto.CashOperationRequest;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@Service
@RequiredArgsConstructor
@Slf4j
public class CashService {
    private final AccountClient accountClient;

    private final NotificationClient notificationClient;

    public void processDeposit(CashOperationRequest cashOperationRequest) {
        accountClient.makeDeposit(cashOperationRequest.accountId(), cashOperationRequest.amount());

        sendDepositSuccessNotification(cashOperationRequest);

        log.info("–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞ {} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ", cashOperationRequest.accountId());
    }

    public void processWithdrawal(CashOperationRequest cashOperationRequest) {
        accountClient.makeWithdrawal(cashOperationRequest.accountId(), cashOperationRequest.amount());

        sendWithdrawalSuccessNotification(cashOperationRequest);

        log.info("–°–Ω—è—Ç–∏–µ —Å–æ —Å—á–µ—Ç–∞ {} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ", cashOperationRequest.accountId());
    }

    private void sendDepositSuccessNotification(CashOperationRequest request) {
        try {
            String message = String.format(
                "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n" +
                    "üí∏ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: %s\n" +
                    "üì• –°—á–µ—Ç: %s\n" +
                    "üí≥ –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å\n" +
                    "üïí –í—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏: %s\n" +
                    "‚úÖ –°—Ç–∞—Ç—É—Å: –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
                request.amount(),
                request.accountId(),
                LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"))
            );

            notificationClient.notify(
                new NotificationClient.NotificationRequest(
                    request.accountId(),
                    message
                )
            );

            log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å—á–µ—Ç–∞ {}", request.accountId());
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–ª—è —Å—á–µ—Ç–∞ {}: {}",
                      request.accountId(), e.getMessage());
        }
    }

    private void sendWithdrawalSuccessNotification(CashOperationRequest request) {
        try {
            String message = String.format(
                "üí≥ –°–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n" +
                    "üí∏ –°—É–º–º–∞ —Å–Ω—è—Ç–∏—è: %s\n" +
                    "üì§ –°—á–µ—Ç: %s\n" +
                    "üí∞ –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã —Å –±–∞–ª–∞–Ω—Å–∞\n" +
                    "üïí –í—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏: %s\n" +
                    "‚úÖ –°—Ç–∞—Ç—É—Å: –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n" +
                    "üèß –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞–ª–∏—á–Ω—ã–µ –≤ –±–∞–Ω–∫–æ–º–∞—Ç–µ",
                request.amount(),
                request.accountId(),
                LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss"))
            );

            notificationClient.notify(
                new NotificationClient.NotificationRequest(
                    request.accountId(),
                    message
                )
            );

            log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω—è—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å—á–µ—Ç–∞ {}", request.accountId());
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω—è—Ç–∏–∏ –¥–ª—è —Å—á–µ—Ç–∞ {}: {}",
                      request.accountId(), e.getMessage());
        }
    }

}
